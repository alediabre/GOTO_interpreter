app.function._idx = idx.goto
app.function._idx.type=arithmetical
app.function._idx.bool = false
app.function._idx.description = Receives X: returns X
app.function._idx.dependsOn = goto

app.function._null = null.goto
app.function._null.type=arithmetical
app.function._null.bool = false
app.function._null.description = Receives X: returns always 0
app.function._null.dependsOn = goto

app.function._sum = sum.goto
app.function._sum.type=arithmetical
app.function._sum.bool = false
app.function._sum.description = Receives X1, X2: returns X1+X2
app.function._sum.dependsOn = goto

app.function._diff = diff.goto
app.function._diff.type=arithmetical
app.function._diff.bool = false
app.function._diff.description = Receives X1, X2: returns X1-X2 or 0 if X2>X1 (reduced difference)
app.function._diff.dependsOn = goto

app.function._product = product.goto
app.function._product.type=arithmetical
app.function._product.bool = false
app.function._product.description = Receives X1, X2: returns X1*X2
app.function._product.dependsOn = _sum

app.function._quotient = quotient.goto
app.function._quotient.type=arithmetical
app.function._quotient.bool = false
app.function._quotient.description = Receives X1, X2: returns quotient of X1/X2 (floor of division)
app.function._quotient.dependsOn = _diff,_invsign

app.function._pow2 = pow2.goto
app.function._pow2.type=arithmetical
app.function._pow2.bool = false
app.function._pow2.description = Receives X1: returns X1^2
app.function._pow2.dependsOn = _product

app.function._pow = pow.goto
app.function._pow.type=arithmetical
app.function._pow.bool = false
app.function._pow.description = Receives X1, X2: returns X1^X2
app.function._pow.dependsOn = _product

app.function._min = min.goto
app.function._min.type=arithmetical
app.function._min.bool = false
app.function._min.description = Receives X1, X2: returns X1 if X1<=X2, X2 if X1>X2
app.function._min.dependsOn = _lte

app.function._max = max.goto
app.function._max.type=arithmetical
app.function._max.bool = false
app.function._max.description = Receives X1, X2: returns X2 if X1<=X2, X1 if X1>X2
app.function._max.dependsOn = goto

app.function._rest = rest.goto
app.function._rest.type=arithmetical
app.function._rest.bool = false
app.function._rest.description = Receives X1, X2: returns rest of X1/X2
app.function._rest.dependsOn = _invsign,_diff

app.function._par = par.goto
app.function._par.type=logical
app.function._par.bool = true
app.function._par.description = Receives X: returns 1 if X is even, 0 if it is odd
app.function._par.dependsOn = goto

app.function._sign = sign.goto
app.function._sign.type=logical
app.function._sign.bool = true
app.function._sign.description = Receives X: returns 1 if X!=0, 0 if X==0
app.function._sign.dependsOn = goto

app.function._invsign = invsign.goto
app.function._invsign.type=logical
app.function._invsign.bool = true
app.function._invsign.description = Receives X: returns 1 if X==0, 0 if X!=0 (inverteSd sign)
app.function._invsign.dependsOn = goto

app.function._prime = prime.goto
app.function._prime.type=logical
app.function._prime.bool = true
app.function._prime.description = Receives X1: returns 1 if X1 is prime, 0 if it is not prime
app.function._prime.dependsOn = _divisor,_invsign

app.function._equals = equals.goto
app.function._equals.type=relational
app.function._equals.bool = true
app.function._equals.description = Receives X1, X2: returns 1 if X1==X2, 0 if X1!=X2
app.function._equals.dependsOn = goto

app.function._lte = lte.goto
app.function._lte.type=relational
app.function._lte.bool = true
app.function._lte.description = Receives X1, X2: returns 1 if X1<=X2, 0 if X1>X2
app.function._lte.dependsOn = goto

app.function._gt = gt.goto
app.function._gt.type=relational
app.function._gt.bool = true
app.function._gt.description = Receives X1, X2: returns 1 if X1>X2, 0 if X1<=X2
app.function._gt.dependsOn = goto

app.function._divisor = divisor.goto
app.function._divisor.type=relational
app.function._divisor.bool = true
app.function._divisor.description = Receives X1, X2: returns 1 if X1|X2 (X1 divides X2), 0 if not X1|X2
app.function._divisor.dependsOn = _invsign

app.function._fibonacci = fibonacci.goto
app.function._fibonacci.type=utils
app.function._fibonacci.bool = false
app.function._fibonacci.description = Receives X1: returns fibonacci(X1)
app.function._fibonacci.dependsOn = _sum

app.function._pair = pair.goto
app.function._pair.type=codification
app.function._pair.bool = false
app.function._pair.description = Receives X1, X2: returns a unique codification number for the pair <X1,X2> (bijective)
app.function._pair.dependsOn = _sum,_pow,_product

app.function._left = left.goto
app.function._left.type=codification
app.function._left.bool = false
app.function._left.description = Receives X1: returns the first number (Z1) of a codified pair (<Z1,Z2> = X1)
app.function._left.dependsOn = _divisor,_quotient

app.function._right = right.goto
app.function._right.type=codification
app.function._right.bool = false
app.function._right.description = Receives X1: returns the second number (Z2) of a codified pair (<Z1,Z2> = X1)
app.function._right.dependsOn = _left,_quotient