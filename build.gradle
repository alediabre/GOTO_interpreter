plugins{
    id 'antlr'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = '0.1.0'
def grammarOutput = "${projectDir}/src/main/antlr/gen/"
def paquete = "org.lenguajegoto"


repositories {
    mavenCentral()
}

dependencies {
    antlr group: 'org.antlr', name: 'antlr4', version: '4.13.1'
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.13.1'
}

application {
    mainClass = 'org.lenguajegoto.Lanzador'
}
run {
    args = ["src/main/resources/prueba.goto", "15", "2"]
}

// Antlr
generateGrammarSource {
    group = 'antlr'
    description = 'Generates the source files for all production ANTLR grammars.'
    maxHeapSize = "64m"
    arguments += [ "-visitor",
                   "-long-messages",
                   "-package", paquete
    ]
    outputDirectory = file(grammarOutput+paquete)
}


tasks.register("deleteGenDirs") {
    group = "antlr"
    doLast {
        def gen = file("${projectDir}/src/main/antlr/gen")
        delete gen
        def generated = file(grammarOutput)
        delete generated
    }
}
clean.dependsOn("deleteGenDirs")


sourceSets {
    main {
        java.srcDirs += grammarOutput
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.lenguajegoto.Lanzador'
        )
    }
}


tasks.register('buildAll') {
    group "antlr"
    dependsOn 'clean'
    dependsOn 'generateGrammarSource'
    dependsOn 'shadowJar'

    tasks.shadowJar.mustRunAfter tasks.generateGrammarSource
    tasks.generateGrammarSource.mustRunAfter tasks.clean

    doLast {
        println 'Successful build! You should now execute following commands:'
        println 'sudo chmod 755 goto'
        println 'sudo cp goto /usr/local/bin'
        println "sudo cp build/libs/${rootProject.name}-${version}-all.jar /usr/local/lib"
        println 'After that try calling "goto" command with args from terminal'
    }
}